//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FbcFoodBank {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("FbcFoodBankDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FbcFoodBankDataSet : System.Data.DataSet {
        
        private ContactsDataTable tableContacts;
        
        private VisitsDataTable tableVisits;
        
        private System.Data.DataRelation relationReference;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FbcFoodBankDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FbcFoodBankDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Contacts"] != null)) {
                    base.Tables.Add(new ContactsDataTable(ds.Tables["Contacts"]));
                }
                if ((ds.Tables["Visits"] != null)) {
                    base.Tables.Add(new VisitsDataTable(ds.Tables["Visits"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContactsDataTable Contacts {
            get {
                return this.tableContacts;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VisitsDataTable Visits {
            get {
                return this.tableVisits;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            FbcFoodBankDataSet cln = ((FbcFoodBankDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Contacts"] != null)) {
                    base.Tables.Add(new ContactsDataTable(ds.Tables["Contacts"]));
                }
                if ((ds.Tables["Visits"] != null)) {
                    base.Tables.Add(new VisitsDataTable(ds.Tables["Visits"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableContacts = ((ContactsDataTable)(base.Tables["Contacts"]));
            if ((initTable == true)) {
                if ((this.tableContacts != null)) {
                    this.tableContacts.InitVars();
                }
            }
            this.tableVisits = ((VisitsDataTable)(base.Tables["Visits"]));
            if ((initTable == true)) {
                if ((this.tableVisits != null)) {
                    this.tableVisits.InitVars();
                }
            }
            this.relationReference = this.Relations["Reference"];
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FbcFoodBankDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FbcFoodBankDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableContacts = new ContactsDataTable();
            base.Tables.Add(this.tableContacts);
            this.tableVisits = new VisitsDataTable();
            base.Tables.Add(this.tableVisits);
            System.Data.ForeignKeyConstraint fkc;
            fkc = new System.Data.ForeignKeyConstraint("Reference", new System.Data.DataColumn[] {
                        this.tableContacts.NameColumn}, new System.Data.DataColumn[] {
                        this.tableVisits.NameColumn});
            this.tableVisits.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.Cascade;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationReference = new System.Data.DataRelation("Reference", new System.Data.DataColumn[] {
                        this.tableContacts.NameColumn}, new System.Data.DataColumn[] {
                        this.tableVisits.NameColumn}, false);
            this.Relations.Add(this.relationReference);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContacts() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVisits() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            FbcFoodBankDataSet ds = new FbcFoodBankDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ContactsRowChangeEventHandler(object sender, ContactsRowChangeEvent e);
        
        public delegate void VisitsRowChangeEventHandler(object sender, VisitsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContactsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnName;
            
            private System.Data.DataColumn columnAdults_in_Home;
            
            private System.Data.DataColumn columnChildren_in_Home;
            
            private System.Data.DataColumn _columnAdults__Names;
            
            private System.Data.DataColumn _columnChildren_s_Names;
            
            private System.Data.DataColumn columnStreet;
            
            private System.Data.DataColumn columnCity;
            
            private System.Data.DataColumn _columnState_Zip;
            
            private System.Data.DataColumn columnPrayer_Request;
            
            private System.Data.DataColumn columnSpecial_Needs;
            
            private System.Data.DataColumn columnInactive;
            
            private System.Data.DataColumn columnDeceased;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsDataTable() {
                this.TableName = "Contacts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContactsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Adults_in_HomeColumn {
                get {
                    return this.columnAdults_in_Home;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Children_in_HomeColumn {
                get {
                    return this.columnChildren_in_Home;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _Adults__NamesColumn {
                get {
                    return this._columnAdults__Names;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _Children_s_NamesColumn {
                get {
                    return this._columnChildren_s_Names;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn _State_ZipColumn {
                get {
                    return this._columnState_Zip;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Prayer_RequestColumn {
                get {
                    return this.columnPrayer_Request;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Special_NeedsColumn {
                get {
                    return this.columnSpecial_Needs;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InactiveColumn {
                get {
                    return this.columnInactive;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DeceasedColumn {
                get {
                    return this.columnDeceased;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow this[int index] {
                get {
                    return ((ContactsRow)(this.Rows[index]));
                }
            }
            
            public event ContactsRowChangeEventHandler ContactsRowChanging;
            
            public event ContactsRowChangeEventHandler ContactsRowChanged;
            
            public event ContactsRowChangeEventHandler ContactsRowDeleting;
            
            public event ContactsRowChangeEventHandler ContactsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContactsRow(ContactsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow AddContactsRow(string Name, int Adults_in_Home, int Children_in_Home, string _Adults__Names, string _Children_s_Names, string Street, string City, string _State_Zip, string Prayer_Request, string Special_Needs, bool Inactive, bool Deceased) {
                ContactsRow rowContactsRow = ((ContactsRow)(this.NewRow()));
                rowContactsRow.ItemArray = new object[] {
                        Name,
                        Adults_in_Home,
                        Children_in_Home,
                        _Adults__Names,
                        _Children_s_Names,
                        Street,
                        City,
                        _State_Zip,
                        Prayer_Request,
                        Special_Needs,
                        Inactive,
                        Deceased};
                this.Rows.Add(rowContactsRow);
                return rowContactsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow FindByName(string Name) {
                return ((ContactsRow)(this.Rows.Find(new object[] {
                            Name})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ContactsDataTable cln = ((ContactsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ContactsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnAdults_in_Home = base.Columns["Adults in Home"];
                this.columnChildren_in_Home = base.Columns["Children in Home"];
                this._columnAdults__Names = base.Columns["Adults\' Names"];
                this._columnChildren_s_Names = base.Columns["Children\'s Names"];
                this.columnStreet = base.Columns["Street"];
                this.columnCity = base.Columns["City"];
                this._columnState_Zip = base.Columns["State/Zip"];
                this.columnPrayer_Request = base.Columns["Prayer Request"];
                this.columnSpecial_Needs = base.Columns["Special Needs"];
                this.columnInactive = base.Columns["Inactive"];
                this.columnDeceased = base.Columns["Deceased"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAdults_in_Home = new System.Data.DataColumn("Adults in Home", typeof(int), null, System.Data.MappingType.Element);
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Adults_in_Home");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Adults_in_HomeColumn");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnAdults_in_Home");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_UserColumnName", "Adults in Home");
                base.Columns.Add(this.columnAdults_in_Home);
                this.columnChildren_in_Home = new System.Data.DataColumn("Children in Home", typeof(int), null, System.Data.MappingType.Element);
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Children_in_Home");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Children_in_HomeColumn");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnChildren_in_Home");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_UserColumnName", "Children in Home");
                base.Columns.Add(this.columnChildren_in_Home);
                this._columnAdults__Names = new System.Data.DataColumn("Adults\' Names", typeof(string), null, System.Data.MappingType.Element);
                this._columnAdults__Names.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Adults__Names");
                this._columnAdults__Names.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_Adults__NamesColumn");
                this._columnAdults__Names.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnAdults__Names");
                this._columnAdults__Names.ExtendedProperties.Add("Generator_UserColumnName", "Adults\' Names");
                base.Columns.Add(this._columnAdults__Names);
                this._columnChildren_s_Names = new System.Data.DataColumn("Children\'s Names", typeof(string), null, System.Data.MappingType.Element);
                this._columnChildren_s_Names.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_Children_s_Names");
                this._columnChildren_s_Names.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_Children_s_NamesColumn");
                this._columnChildren_s_Names.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnChildren_s_Names");
                this._columnChildren_s_Names.ExtendedProperties.Add("Generator_UserColumnName", "Children\'s Names");
                base.Columns.Add(this._columnChildren_s_Names);
                this.columnStreet = new System.Data.DataColumn("Street", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnCity = new System.Data.DataColumn("City", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this._columnState_Zip = new System.Data.DataColumn("State/Zip", typeof(string), null, System.Data.MappingType.Element);
                this._columnState_Zip.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_State_Zip");
                this._columnState_Zip.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_State_ZipColumn");
                this._columnState_Zip.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnState_Zip");
                this._columnState_Zip.ExtendedProperties.Add("Generator_UserColumnName", "State/Zip");
                base.Columns.Add(this._columnState_Zip);
                this.columnPrayer_Request = new System.Data.DataColumn("Prayer Request", typeof(string), null, System.Data.MappingType.Element);
                this.columnPrayer_Request.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Prayer_Request");
                this.columnPrayer_Request.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Prayer_RequestColumn");
                this.columnPrayer_Request.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnPrayer_Request");
                this.columnPrayer_Request.ExtendedProperties.Add("Generator_UserColumnName", "Prayer Request");
                base.Columns.Add(this.columnPrayer_Request);
                this.columnSpecial_Needs = new System.Data.DataColumn("Special Needs", typeof(string), null, System.Data.MappingType.Element);
                this.columnSpecial_Needs.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Special_Needs");
                this.columnSpecial_Needs.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Special_NeedsColumn");
                this.columnSpecial_Needs.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSpecial_Needs");
                this.columnSpecial_Needs.ExtendedProperties.Add("Generator_UserColumnName", "Special Needs");
                base.Columns.Add(this.columnSpecial_Needs);
                this.columnInactive = new System.Data.DataColumn("Inactive", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactive);
                this.columnDeceased = new System.Data.DataColumn("Deceased", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeceased);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnName}, true));
                this.columnName.AllowDBNull = false;
                this.columnName.Unique = true;
                this.columnName.MaxLength = 50;
                this.columnAdults_in_Home.DefaultValue = ((int)(1));
                this.columnChildren_in_Home.DefaultValue = ((int)(0));
                this._columnAdults__Names.MaxLength = 250;
                this._columnChildren_s_Names.MaxLength = 250;
                this.columnStreet.MaxLength = 50;
                this.columnCity.MaxLength = 50;
                this._columnState_Zip.MaxLength = 50;
                this.columnPrayer_Request.MaxLength = 250;
                this.columnSpecial_Needs.MaxLength = 250;
                this.columnInactive.DefaultValue = ((bool)(false));
                this.columnDeceased.DefaultValue = ((bool)(false));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow NewContactsRow() {
                return ((ContactsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ContactsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ContactsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContactsRowChanged != null)) {
                    this.ContactsRowChanged(this, new ContactsRowChangeEvent(((ContactsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContactsRowChanging != null)) {
                    this.ContactsRowChanging(this, new ContactsRowChangeEvent(((ContactsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContactsRowDeleted != null)) {
                    this.ContactsRowDeleted(this, new ContactsRowChangeEvent(((ContactsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContactsRowDeleting != null)) {
                    this.ContactsRowDeleting(this, new ContactsRowChangeEvent(((ContactsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContactsRow(ContactsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FbcFoodBankDataSet ds = new FbcFoodBankDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContactsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VisitsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnDate;
            
            private System.Data.DataColumn columnName;
            
            private System.Data.DataColumn columnId;
            
            private System.Data.DataColumn columnAdults_in_Home;
            
            private System.Data.DataColumn columnChildren_in_Home;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsDataTable() {
                this.TableName = "Visits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VisitsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VisitsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Adults_in_HomeColumn {
                get {
                    return this.columnAdults_in_Home;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Children_in_HomeColumn {
                get {
                    return this.columnChildren_in_Home;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow this[int index] {
                get {
                    return ((VisitsRow)(this.Rows[index]));
                }
            }
            
            public event VisitsRowChangeEventHandler VisitsRowChanging;
            
            public event VisitsRowChangeEventHandler VisitsRowChanged;
            
            public event VisitsRowChangeEventHandler VisitsRowDeleting;
            
            public event VisitsRowChangeEventHandler VisitsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVisitsRow(VisitsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow AddVisitsRow(System.DateTime Date, ContactsRow parentContactsRowByReference, int Adults_in_Home, int Children_in_Home) {
                VisitsRow rowVisitsRow = ((VisitsRow)(this.NewRow()));
                rowVisitsRow.ItemArray = new object[] {
                        Date,
                        parentContactsRowByReference[0],
                        null,
                        Adults_in_Home,
                        Children_in_Home};
                this.Rows.Add(rowVisitsRow);
                return rowVisitsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow FindById(int Id) {
                return ((VisitsRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                VisitsDataTable cln = ((VisitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new VisitsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDate = base.Columns["Date"];
                this.columnName = base.Columns["Name"];
                this.columnId = base.Columns["Id"];
                this.columnAdults_in_Home = base.Columns["Adults in Home"];
                this.columnChildren_in_Home = base.Columns["Children in Home"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDate = new System.Data.DataColumn("Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnId = new System.Data.DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnAdults_in_Home = new System.Data.DataColumn("Adults in Home", typeof(int), null, System.Data.MappingType.Element);
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Adults_in_Home");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Adults_in_HomeColumn");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnAdults_in_Home");
                this.columnAdults_in_Home.ExtendedProperties.Add("Generator_UserColumnName", "Adults in Home");
                base.Columns.Add(this.columnAdults_in_Home);
                this.columnChildren_in_Home = new System.Data.DataColumn("Children in Home", typeof(int), null, System.Data.MappingType.Element);
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Children_in_Home");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Children_in_HomeColumn");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnChildren_in_Home");
                this.columnChildren_in_Home.ExtendedProperties.Add("Generator_UserColumnName", "Children in Home");
                base.Columns.Add(this.columnChildren_in_Home);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnName.MaxLength = 50;
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow NewVisitsRow() {
                return ((VisitsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new VisitsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(VisitsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VisitsRowChanged != null)) {
                    this.VisitsRowChanged(this, new VisitsRowChangeEvent(((VisitsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VisitsRowChanging != null)) {
                    this.VisitsRowChanging(this, new VisitsRowChangeEvent(((VisitsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VisitsRowDeleted != null)) {
                    this.VisitsRowDeleted(this, new VisitsRowChangeEvent(((VisitsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VisitsRowDeleting != null)) {
                    this.VisitsRowDeleting(this, new VisitsRowChangeEvent(((VisitsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVisitsRow(VisitsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                FbcFoodBankDataSet ds = new FbcFoodBankDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VisitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContactsRow : System.Data.DataRow {
            
            private ContactsDataTable tableContacts;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContactsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContacts = ((ContactsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableContacts.NameColumn]));
                }
                set {
                    this[this.tableContacts.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Adults_in_Home {
                get {
                    try {
                        return ((int)(this[this.tableContacts.Adults_in_HomeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Adults in Home\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.Adults_in_HomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Children_in_Home {
                get {
                    try {
                        return ((int)(this[this.tableContacts.Children_in_HomeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Children in Home\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.Children_in_HomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Adults__Names {
                get {
                    try {
                        return ((string)(this[this.tableContacts._Adults__NamesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Adults\' Names\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts._Adults__NamesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _Children_s_Names {
                get {
                    try {
                        return ((string)(this[this.tableContacts._Children_s_NamesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Children\'s Names\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts._Children_s_NamesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableContacts.StreetColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Street\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.StreetColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableContacts.CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'City\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _State_Zip {
                get {
                    try {
                        return ((string)(this[this.tableContacts._State_ZipColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'State/Zip\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts._State_ZipColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Prayer_Request {
                get {
                    try {
                        return ((string)(this[this.tableContacts.Prayer_RequestColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Prayer Request\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.Prayer_RequestColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Special_Needs {
                get {
                    try {
                        return ((string)(this[this.tableContacts.Special_NeedsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Special Needs\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.Special_NeedsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Inactive {
                get {
                    try {
                        return ((bool)(this[this.tableContacts.InactiveColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Inactive\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.InactiveColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Deceased {
                get {
                    try {
                        return ((bool)(this[this.tableContacts.DeceasedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Deceased\' in table \'Contacts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContacts.DeceasedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdults_in_HomeNull() {
                return this.IsNull(this.tableContacts.Adults_in_HomeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdults_in_HomeNull() {
                this[this.tableContacts.Adults_in_HomeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChildren_in_HomeNull() {
                return this.IsNull(this.tableContacts.Children_in_HomeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChildren_in_HomeNull() {
                this[this.tableContacts.Children_in_HomeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Adults__NamesNull() {
                return this.IsNull(this.tableContacts._Adults__NamesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Adults__NamesNull() {
                this[this.tableContacts._Adults__NamesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Children_s_NamesNull() {
                return this.IsNull(this.tableContacts._Children_s_NamesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_Children_s_NamesNull() {
                this[this.tableContacts._Children_s_NamesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStreetNull() {
                return this.IsNull(this.tableContacts.StreetColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStreetNull() {
                this[this.tableContacts.StreetColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableContacts.CityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableContacts.CityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_State_ZipNull() {
                return this.IsNull(this.tableContacts._State_ZipColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_State_ZipNull() {
                this[this.tableContacts._State_ZipColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrayer_RequestNull() {
                return this.IsNull(this.tableContacts.Prayer_RequestColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrayer_RequestNull() {
                this[this.tableContacts.Prayer_RequestColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecial_NeedsNull() {
                return this.IsNull(this.tableContacts.Special_NeedsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecial_NeedsNull() {
                this[this.tableContacts.Special_NeedsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactiveNull() {
                return this.IsNull(this.tableContacts.InactiveColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactiveNull() {
                this[this.tableContacts.InactiveColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeceasedNull() {
                return this.IsNull(this.tableContacts.DeceasedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeceasedNull() {
                this[this.tableContacts.DeceasedColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow[] GetVisitsRows() {
                return ((VisitsRow[])(base.GetChildRows(this.Table.ChildRelations["Reference"])));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VisitsRow : System.Data.DataRow {
            
            private VisitsDataTable tableVisits;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VisitsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVisits = ((VisitsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableVisits.DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Date\' in table \'Visits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisits.DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableVisits.NameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Name\' in table \'Visits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisits.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableVisits.IdColumn]));
                }
                set {
                    this[this.tableVisits.IdColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Adults_in_Home {
                get {
                    try {
                        return ((int)(this[this.tableVisits.Adults_in_HomeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Adults in Home\' in table \'Visits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisits.Adults_in_HomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Children_in_Home {
                get {
                    try {
                        return ((int)(this[this.tableVisits.Children_in_HomeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Children in Home\' in table \'Visits\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisits.Children_in_HomeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow ContactsRow {
                get {
                    return ((ContactsRow)(this.GetParentRow(this.Table.ParentRelations["Reference"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Reference"]);
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableVisits.DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableVisits.DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableVisits.NameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableVisits.NameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdults_in_HomeNull() {
                return this.IsNull(this.tableVisits.Adults_in_HomeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdults_in_HomeNull() {
                this[this.tableVisits.Adults_in_HomeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChildren_in_HomeNull() {
                return this.IsNull(this.tableVisits.Children_in_HomeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChildren_in_HomeNull() {
                this[this.tableVisits.Children_in_HomeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContactsRowChangeEvent : System.EventArgs {
            
            private ContactsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRowChangeEvent(ContactsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContactsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VisitsRowChangeEvent : System.EventArgs {
            
            private VisitsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRowChangeEvent(VisitsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VisitsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace FbcFoodBank.FbcFoodBankDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContactsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContactsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contacts";
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Adults in Home", "Adults in Home");
            tableMapping.ColumnMappings.Add("Children in Home", "Children in Home");
            tableMapping.ColumnMappings.Add("Adults\' Names", "Adults\' Names");
            tableMapping.ColumnMappings.Add("Children\'s Names", "Children\'s Names");
            tableMapping.ColumnMappings.Add("Street", "Street");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("State/Zip", "State/Zip");
            tableMapping.ColumnMappings.Add("Prayer Request", "Prayer Request");
            tableMapping.ColumnMappings.Add("Special Needs", "Special Needs");
            tableMapping.ColumnMappings.Add("Inactive", "Inactive");
            tableMapping.ColumnMappings.Add("Deceased", "Deceased");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Contacts` WHERE ((`Name` = ?) AND ((? = 1 AND `Adults in Home` IS NULL) OR (`Adults in Home` = ?)) AND ((? = 1 AND `Children in Home` IS NULL) OR (`Children in Home` = ?)) AND ((? = 1 AND `Adults' Names` IS NULL) OR (`Adults' Names` = ?)) AND ((? = 1 AND `Children's Names` IS NULL) OR (`Children's Names` = ?)) AND ((? = 1 AND `Street` IS NULL) OR (`Street` = ?)) AND ((? = 1 AND `City` IS NULL) OR (`City` = ?)) AND ((? = 1 AND `State/Zip` IS NULL) OR (`State/Zip` = ?)) AND ((? = 1 AND `Prayer Request` IS NULL) OR (`Prayer Request` = ?)) AND ((? = 1 AND `Special Needs` IS NULL) OR (`Special Needs` = ?)) AND ((? = 1 AND `Inactive` IS NULL) OR (`Inactive` = ?)) AND ((? = 1 AND `Deceased` IS NULL) OR (`Deceased` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults\'_Names", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults\'_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children\'s_Names", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children\'s_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Street", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Street", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_City", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_City", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_State/Zip", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_State/Zip", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Prayer_Request", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Prayer_Request", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Special_Needs", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Special_Needs", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Inactive", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Inactive", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Deceased", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Deceased", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Contacts` (`Name`, `Adults in Home`, `Children in Home`, `Adults\' Na" +
                "mes`, `Children\'s Names`, `Street`, `City`, `State/Zip`, `Prayer Request`, `Spec" +
                "ial Needs`, `Inactive`, `Deceased`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults\'_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children\'s_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Street", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("City", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("State/Zip", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Prayer_Request", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Special_Needs", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Inactive", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Deceased", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Contacts` SET `Name` = ?, `Adults in Home` = ?, `Children in Home` = ?, `Adults' Names` = ?, `Children's Names` = ?, `Street` = ?, `City` = ?, `State/Zip` = ?, `Prayer Request` = ?, `Special Needs` = ?, `Inactive` = ?, `Deceased` = ? WHERE ((`Name` = ?) AND ((? = 1 AND `Adults in Home` IS NULL) OR (`Adults in Home` = ?)) AND ((? = 1 AND `Children in Home` IS NULL) OR (`Children in Home` = ?)) AND ((? = 1 AND `Adults' Names` IS NULL) OR (`Adults' Names` = ?)) AND ((? = 1 AND `Children's Names` IS NULL) OR (`Children's Names` = ?)) AND ((? = 1 AND `Street` IS NULL) OR (`Street` = ?)) AND ((? = 1 AND `City` IS NULL) OR (`City` = ?)) AND ((? = 1 AND `State/Zip` IS NULL) OR (`State/Zip` = ?)) AND ((? = 1 AND `Prayer Request` IS NULL) OR (`Prayer Request` = ?)) AND ((? = 1 AND `Special Needs` IS NULL) OR (`Special Needs` = ?)) AND ((? = 1 AND `Inactive` IS NULL) OR (`Inactive` = ?)) AND ((? = 1 AND `Deceased` IS NULL) OR (`Deceased` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults\'_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children\'s_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Street", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("City", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("State/Zip", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Prayer_Request", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Special_Needs", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Inactive", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Deceased", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults\'_Names", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults\'_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults\' Names", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children\'s_Names", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children\'s_Names", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children\'s Names", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Street", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Street", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Street", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_City", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_City", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "City", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_State/Zip", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_State/Zip", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "State/Zip", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Prayer_Request", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Prayer_Request", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prayer Request", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Special_Needs", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Special_Needs", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Special Needs", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Inactive", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Inactive", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Inactive", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Deceased", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Deceased", System.Data.OleDb.OleDbType.Boolean, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Deceased", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::FbcFoodBank.Properties.Settings.Default.FbcFoodBankConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Name, [Adults in Home], [Children in Home], [Adults\' Names], [Children\'s N" +
                "ames], Street, City, [State/Zip], [Prayer Request], [Special Needs], Inactive, D" +
                "eceased FROM Contacts ORDER BY Name";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FbcFoodBankDataSet.ContactsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FbcFoodBankDataSet.ContactsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FbcFoodBankDataSet.ContactsDataTable dataTable = new FbcFoodBankDataSet.ContactsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FbcFoodBankDataSet.ContactsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FbcFoodBankDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Contacts");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Name, System.Nullable<int> Original_Adults_in_Home, System.Nullable<int> Original_Children_in_Home, string _Original_Adults__Names, string _Original_Children_s_Names, string Original_Street, string Original_City, string _Original_State_Zip, string Original_Prayer_Request, string Original_Special_Needs, bool Original_Inactive, bool Original_Deceased) {
            if ((Original_Name == null)) {
                throw new System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Name));
            }
            if ((Original_Adults_in_Home.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Adults_in_Home.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Original_Children_in_Home.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Children_in_Home.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((_Original_Adults__Names == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(_Original_Adults__Names));
            }
            if ((_Original_Children_s_Names == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(_Original_Children_s_Names));
            }
            if ((Original_Street == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Street));
            }
            if ((Original_City == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_City));
            }
            if ((_Original_State_Zip == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(_Original_State_Zip));
            }
            if ((Original_Prayer_Request == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Prayer_Request));
            }
            if ((Original_Special_Needs == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Special_Needs));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_Inactive));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_Deceased));
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Name, System.Nullable<int> Adults_in_Home, System.Nullable<int> Children_in_Home, string _Adults__Names, string _Children_s_Names, string Street, string City, string _State_Zip, string Prayer_Request, string Special_Needs, bool Inactive, bool Deceased) {
            if ((Name == null)) {
                throw new System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Adults_in_Home.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Adults_in_Home.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Children_in_Home.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Children_in_Home.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((_Adults__Names == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(_Adults__Names));
            }
            if ((_Children_s_Names == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(_Children_s_Names));
            }
            if ((Street == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Street));
            }
            if ((City == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(City));
            }
            if ((_State_Zip == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(_State_Zip));
            }
            if ((Prayer_Request == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Prayer_Request));
            }
            if ((Special_Needs == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Special_Needs));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(Inactive));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Deceased));
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Name, 
                    System.Nullable<int> Adults_in_Home, 
                    System.Nullable<int> Children_in_Home, 
                    string _Adults__Names, 
                    string _Children_s_Names, 
                    string Street, 
                    string City, 
                    string _State_Zip, 
                    string Prayer_Request, 
                    string Special_Needs, 
                    bool Inactive, 
                    bool Deceased, 
                    string Original_Name, 
                    System.Nullable<int> Original_Adults_in_Home, 
                    System.Nullable<int> Original_Children_in_Home, 
                    string _Original_Adults__Names, 
                    string _Original_Children_s_Names, 
                    string Original_Street, 
                    string Original_City, 
                    string _Original_State_Zip, 
                    string Original_Prayer_Request, 
                    string Original_Special_Needs, 
                    bool Original_Inactive, 
                    bool Original_Deceased) {
            if ((Name == null)) {
                throw new System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Name));
            }
            if ((Adults_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Adults_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((Children_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Children_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((_Adults__Names == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(_Adults__Names));
            }
            if ((_Children_s_Names == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(_Children_s_Names));
            }
            if ((Street == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Street));
            }
            if ((City == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(City));
            }
            if ((_State_Zip == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(_State_Zip));
            }
            if ((Prayer_Request == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Prayer_Request));
            }
            if ((Special_Needs == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Special_Needs));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Inactive));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Deceased));
            if ((Original_Name == null)) {
                throw new System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Name));
            }
            if ((Original_Adults_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Adults_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = System.DBNull.Value;
            }
            if ((Original_Children_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Children_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((_Original_Adults__Names == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(_Original_Adults__Names));
            }
            if ((_Original_Children_s_Names == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(_Original_Children_s_Names));
            }
            if ((Original_Street == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Street));
            }
            if ((Original_City == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_City));
            }
            if ((_Original_State_Zip == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(_Original_State_Zip));
            }
            if ((Original_Prayer_Request == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Prayer_Request));
            }
            if ((Original_Special_Needs == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Special_Needs));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Inactive));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(Original_Deceased));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VisitsTableAdapter : System.ComponentModel.Component {
        
        private System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private System.Data.OleDb.OleDbConnection _connection;
        
        private System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VisitsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.OleDb.OleDbDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Visits";
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Adults in Home", "Adults in Home");
            tableMapping.ColumnMappings.Add("Children in Home", "Children in Home");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `Visits` WHERE (((? = 1 AND `Date` IS NULL) OR (`Date` = ?)) AND ((? = 1 AND `Name` IS NULL) OR (`Name` = ?)) AND (`Id` = ?) AND ((? = 1 AND `Adults in Home` IS NULL) OR (`Adults in Home` = ?)) AND ((? = 1 AND `Children in Home` IS NULL) OR (`Children in Home` = ?)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Date", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Date", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Name", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Id", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `Visits` (`Date`, `Name`, `Adults in Home`, `Children in Home`) VALUE" +
                "S (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Date", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `Visits` SET `Date` = ?, `Name` = ?, `Adults in Home` = ?, `Children in Home` = ? WHERE (((? = 1 AND `Date` IS NULL) OR (`Date` = ?)) AND ((? = 1 AND `Name` IS NULL) OR (`Name` = ?)) AND (`Id` = ?) AND ((? = 1 AND `Adults in Home` IS NULL) OR (`Adults in Home` = ?)) AND ((? = 1 AND `Children in Home` IS NULL) OR (`Children in Home` = ?)))";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Date", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Date", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Date", System.Data.OleDb.OleDbType.Date, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Date", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Name", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Name", System.Data.OleDb.OleDbType.VarWChar, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Name", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Id", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Adults_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adults in Home", System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("IsNull_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.OleDb.OleDbParameter("Original_Children_in_Home", System.Data.OleDb.OleDbType.Integer, 0, System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Children in Home", System.Data.DataRowVersion.Original, false, null));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::FbcFoodBank.Properties.Settings.Default.FbcFoodBankConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Date], Name, Id, [Adults in Home], [Children in Home] FROM Visits ORDER B" +
                "Y [Date] DESC";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(FbcFoodBankDataSet.VisitsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual FbcFoodBankDataSet.VisitsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            FbcFoodBankDataSet.VisitsDataTable dataTable = new FbcFoodBankDataSet.VisitsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FbcFoodBankDataSet.VisitsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(FbcFoodBankDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Visits");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Date, string Original_Name, int Original_Id, System.Nullable<int> Original_Adults_in_Home, System.Nullable<int> Original_Children_in_Home) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Date));
            if ((Original_Name == null)) {
                throw new System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Name));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Id));
            if ((Original_Adults_in_Home.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Adults_in_Home.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((Original_Children_in_Home.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_Children_in_Home.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Date, string Name, System.Nullable<int> Adults_in_Home, System.Nullable<int> Children_in_Home) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Date));
            if ((Name == null)) {
                throw new System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Adults_in_Home.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Adults_in_Home.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Children_in_Home.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Children_in_Home.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Date, string Name, System.Nullable<int> Adults_in_Home, System.Nullable<int> Children_in_Home, System.DateTime Original_Date, string Original_Name, int Original_Id, System.Nullable<int> Original_Adults_in_Home, System.Nullable<int> Original_Children_in_Home) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Date));
            if ((Name == null)) {
                throw new System.ArgumentNullException("Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Name));
            }
            if ((Adults_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Adults_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((Children_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Children_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Date));
            if ((Original_Name == null)) {
                throw new System.ArgumentNullException("Original_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Name));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Id));
            if ((Original_Adults_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_Adults_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            if ((Original_Children_in_Home.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_Children_in_Home.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591